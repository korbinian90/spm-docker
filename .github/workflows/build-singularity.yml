name: Build & Deploy Singularity Containers
on: 
  push:
    branches:
      - main

  release:
    types: [published]

  pull_request:

  workflow_dispatch:
    branches:
      - main

  schedule:
    - cron: '0 0 1 * *'

jobs:
  build-test-deploy-singularity:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        recipe: ["matlab/singularity.def", "octave/singularity.def"]

    name: Build ${{ matrix.recipe }}
    steps:

      - name: Check out code for the container build
        uses: actions/checkout@v3

      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Install Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            build-essential \
            libssl-dev \
            uuid-dev \
            libgpgme11-dev \
            squashfs-tools \
            libseccomp-dev \
            pkg-config

      - name: Install Singularity
        env:
          SINGULARITY_VERSION: 3.8.1
          GOPATH: /tmp/go
        run: |
          mkdir -p $GOPATH
          sudo mkdir -p /usr/local/var/singularity/mnt && \
          mkdir -p $GOPATH/src/github.com/sylabs && \
          cd $GOPATH/src/github.com/sylabs && \
          wget -qO- https://github.com/sylabs/singularity/releases/download/v${SINGULARITY_VERSION}/singularity-ce-${SINGULARITY_VERSION}.tar.gz | \
          tar xzv && \
          cd singularity-ce-${SINGULARITY_VERSION} && \
          ./mconfig -p /usr/local && \
          make -C builddir && \
          sudo make -C builddir install

      - name: Build Container
        run: |
         sudo -E singularity build spm12.sif ${{ matrix.recipe }}

      - name: Test Container
        run: |
          singularity run spm12.sif --version

      - name: Login and Deploy Container
        if: |
          (github.event_name != 'pull_request') &&
          (github.repository_owner == 'spm')
        run: |
          tag=$(basename $(dirname ${{ matrix.recipe }}))
          if [ "$tag" == "" ]; then
            tag=latest
          fi
          echo "Tag is $tag."
          echo ${{ secrets.GITHUB_TOKEN }} | singularity remote login -u ${{ secrets.GHCR_USERNAME }} --password-stdin oras://ghcr.io
          singularity push spm12.sif oras://ghcr.io/${GITHUB_REPOSITORY}:${tag}
